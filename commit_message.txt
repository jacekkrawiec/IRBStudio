feat(simulation): Implement OOP-based PortfolioSimulator class

This commit implements Task 2.3.1 from the project plan: "Refactor the core simulation engine using OOP principles."

The main changes include:
- Add new PortfolioSimulator class that separates preparation from simulation steps
- Add support for Monte Carlo simulations with the run_monte_carlo method
- Improve random seed handling for better reproducibility
- Add comprehensive test suite for the new implementation
- Maintain backward compatibility through the simulate_portfolio function
- Fix score_to_rating mapping to handle non-monotonic rating bounds
- Add documentation for the new implementation

This implementation provides several benefits:
1. Memory efficiency in Monte Carlo simulations
2. Clean separation of preparation and simulation logic
3. Ability to reuse fitted models across multiple simulations
4. Extensibility for new simulation features

Related to: Task 2.3.1
Documentation: docs/portfolio_simulator.md